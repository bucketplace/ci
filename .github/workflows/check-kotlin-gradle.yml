name: "Check Kotlin"

on:
  workflow_call:
    inputs:
      app-name:
        description: "앱 이름"
        required: true
        type: string
      app-version:
        description: "앱 버전"
        required: false
        type: string
      app-path:
        type: string
        description: "앱 기준 디렉토리"
        required: false
        default: "."
      gradlew-path:
        type: string
        description: "gradlew가 있는 path"
        required: false
        default: "."
      sonar-host-url:
        type: string
        description: "host url of sonarqube"
        required: false
        default: "https://sonarqube.co-workerhou.se"
    secrets:
      SONAR_TOKEN:
        required: true
jobs:
  check-and-report:
    env:
      GRADLE_USER_HOME: /runner/.gradle
    name: Lint, Test And Reports
    runs-on: [self-hosted, Linux, X64, mortar-runner]
    steps:
      - name: Checkout Code for Get Main SHA
        uses: actions/checkout@v3
        with:
          path: ${{ github.workspace }}/get-sha-temp
          ref: ${{ github.event.repository.default_branch }}
      - name: Get Main SHA
        id: get-sha
        run: |
          cd ${{ github.workspace }}/get-sha-temp
          echo "short-sha=$(git rev-parse --short=10 HEAD)" >> "$GITHUB_OUTPUT"
          rm -rf ${{ github.workspace }}/get-sha-temp
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest # Optional. [latest,nightly,v.X.Y.Z]
      - name: Check Conditions
        id: check-conditions
        run: |
          if [[ "${{ startsWith(github.event_name, 'pull_request') }}" == "true" ]]; then
            RD_REPORT="github-pr-review"
          elif [[ "${{ github.event.head_commit != null }}" == "true" ]]; then
            RD_REPORT="github-check"
          else
            RD_REPORT="local"
            RD_DIFF="-diff=\"git diff ${{ steps.get-sha.outputs.sha }} ${{ inputs.app-path }}"
          fi

          echo "reviewdog-reporter=${RD_REPORT}" >> "$GITHUB_OUTPUT"
          echo "reviewdog-diff=${RD_DIFF}" >> "$GITHUB_OUTPUT"
        shell: bash
      - name: Report Summary
        run: |
          cat >> "$GITHUB_STEP_SUMMARY" << EOF
          ## Request Information
          | Name | Details |
          | --- | --- |
          | App Name | ${{ inputs.app-name }} |
          | App Path | ${{ inputs.app-path }} |
          | Gradle Path | ${{ inputs.gradlew-path}}/gradlew |
          | Sonar Version | ${{ steps.check-conditions.outputs.sonar_version }} |
          | Deployed By | @${{ github.actor }} |

          EOF
          if [[ -f "${{ inputs.app-path }}"/mortar.yaml ]]; then
              echo "<details><summary><b>mortar.yaml</b></summary>" >> "$GITHUB_STEP_SUMMARY"
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo '``` yaml' >> "$GITHUB_STEP_SUMMARY"
              cat "${{ inputs.app-path }}"/mortar.yaml >> "$GITHUB_STEP_SUMMARY"
              echo '```' >> "$GITHUB_STEP_SUMMARY"
              echo "" >> "$GITHUB_STEP_SUMMARY"
              echo "</details>" >> "$GITHUB_STEP_SUMMARY"
          fi 
        shell: bash
      - name: Run gradle for lint, test and sonarqube
        id: gradle-run
        run: |
          ${{ inputs.gradlew-path }}/gradlew check jacocoTestReport \
          --project-dir=${{ inputs.app-path }} \
          --info \
          --continue
        shell: bash
      - if: failure()
        name: Upload Reports
        uses: actions/upload-artifact@v3
        with:
          name: Failure Reports
          path: ${{ inputs.app-path }}/build/reports/
      - if: always() && github.event_name != 'workflow_dispatch'
        name: Add coverage to PR
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: ${{ inputs.app-path }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 70
          min-coverage-changed-files: 70
          update-comment: true
          title: "Coverage Report"
      - if: always()
        name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPORTS_DIR: ${{ inputs.app-path }}/build/reports
        continue-on-error: true
        run: |
          function review {
            file=$1
            review_name=$2
            if [[ -f "$file" ]]; then
              cat "$file" | reviewdog \
              -reporter="${{ steps.check-conditions.outputs.reviewdog-reporter }}" \
              -f=checkstyle \
              --name="${review_name}" \
               ${{steps.check-conditions.outputs.reviewdog-diff}}
            fi
          }
          review "$REPORTS_DIR"/ktlint/ktlintKotlinScriptCheck/ktlintKotlinScriptCheck.xml "Report / ktlint-script"
          review "$REPORTS_DIR"/ktlint/ktlintMainSourceSetCheck/ktlintMainSourceSetCheck.xml "Report / ktlint-source"
          review "$REPORTS_DIR"/ktlint/ktlintTestSourceSetCheck/ktlintTestSourceSetCheck.xml "Report / ktlint-test"
          review "$REPORTS_DIR"/detekt/detekt.xml "Report / detekt"
        shell: bash
      - name: SonarQube Scanner Action
        id: sonarqube-params
        uses: philips-software/sonar-scanner-action@v1.5.1
        with:
          projectName: ${{ inputs.app-name }}
          projectKey: ${{ inputs.app-name }}
          baseDir: ${{ inputs.app-path }}
          token: ${{ secrets.SONAR_TOKEN }}
          url: ${{ inputs.sonar-host-url }}
          enablePullRequestDecoration: true
          isCommunityEdition: false
          runQualityGate: true
          organization: bucketplace
          onlyConfig: true
      - name: Report sonarqube
        run: |
          ${{ inputs.gradlew-path }}/gradlew sonarqube \
          --project-dir=${{ inputs.app-path }} \
          --info \
          --continue \
          ${{ steps.sonarqube-params.outputs.sonarParameters }}
        shell: bash
  