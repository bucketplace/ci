name: "Check Web"

on:
  workflow_call:
    inputs:
      app-path:
        description: "Specifies a base directory to run the task from"
        required: false
        default: "."
        type: string
      nodejs-version:
        description: "Specifies which Node.js version to use"
        required: false
        default: "18"
        type: string
      package-manager:
        description: "Specifies which package manager to use (leave empty to auto-detect)"
        required: false
        default: ""
        type: string
      prepare-command:
        description: "Specifies a script name that runs bootstrapping tasks"
        required: false
        default: "test:prepare"
        type: string
      prepare-command-args:
        description: "Specifies optional arguments to the prepare command"
        required: false
        default: ""
        type: string
      test-command:
        description: "Specifies a script name that runs tests"
        required: false
        default: "test"
        type: string
      test-command-args:
        description: "Specifies optional arguments to the test command"
        required: false
        default: ""
        type: string
      sonarcloud-command:
        description: "Specifies a script name that will prepare materials for uploading to SonarCloud (executed only when there's SonarCloud config exists)"
        required: false
        default: "sonarcloud"
        type: string
      sonarcloud-command-args:
        description: "Specifies optional arguments to the sonarcloud command"
        required: false
        default: ""
        type: string
      use-large-runner:
        description: "Specifies whether to use a large runner for the job"
        required: false
        default: false
        type: boolean
    secrets:
      DOCKERHUB_USERNAME:
        description: "The Docker Hub username for logging in"
        required: false
      DOCKERHUB_TOKEN:
        description: "The Docker Hub token for logging in"
        required: false
      SONAR_TOKEN:
        description: "The SonarCloud token for uploading reports"
        required: false

env:
  NODE_ENV: development # This must always be set. Otherwise, required dependencies to run test will not be installed or inconsistency happens.
  CI: true

jobs:
  run-checks:
    name: Run checks and report
    runs-on: ${{ fromJSON(format('[''self-hosted'', ''Linux'', ''X64'', ''cache'', ''node-18''{0}]', inputs.use-large-runner == true && ', ''large''' || '')) }}
    defaults:
      run:
        working-directory: ${{ inputs.app-path }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Use Node.js v${{ inputs.nodejs-version }}
        run: echo ${{ inputs.nodejs-version }} > .nvmrc && nvm use
      - name: Determine which package manager to use
        id: pkg-manager
        uses: bucketplace/ci/.github/actions/select-nodejs-pkg-manager@latest
        with:
          app-path: ${{ inputs.app-path }}
          package-manager: ${{ inputs.package-manager }}
      - name: Install dependencies
        run: ${{ steps.pkg-manager.outputs.install-cmd }}
      - name: Calculate available system memory for heap allocation
        id: calc-system-memory
        shell: bash
        run: echo "available=$(expr $(cat /sys/fs/cgroup/memory/memory.limit_in_bytes) / 1024 / 1024 / 100 \* 50)" >> $GITHUB_OUTPUT
      - name: Check whether prepare script is present
        id: check-test-configured
        shell: bash
        run: node -e "process.stdout.write('test-prepare=' + String(require('./package.json')?.scripts?.['${{ inputs.prepare-command }}'] != null))" 2>&1 >> $GITHUB_OUTPUT
      - name: Run prepare script
        if: steps.check-test-configured.outputs.test-prepare == 'true'
        run: ${{ steps.pkg-manager.outputs.run-cmd }} ${{ inputs.prepare-command }} ${{ inputs.prepare-command-args }}
      - name: Run test
        run: ${{ steps.pkg-manager.outputs.run-cmd }} ${{ inputs.test-command }} ${{ inputs.test-command-args }}
        env:
          NODE_OPTIONS: --max-old-space-size=${{ steps.calc-system-memory.outputs.available }}
      - name: Check whether SonarCloud is configured
        id: check-sonarcloud-configured
        shell: bash
        run: |
          if [[ -f "sonar-project.properties" ]]; then
            echo "SonarCloud configuration detected, will run analysis."
            echo "sonar-ready=true" >> $GITHUB_OUTPUT
          else
            echo "SonarCloud configuration not detected, will skip analysis."
            echo "sonar-ready=false" >> $GITHUB_OUTPUT
          fi
          node -e "process.stdout.write('sonar-prepare=' + String(require('./package.json')?.scripts?.['${{ inputs.sonarcloud-command }}'] != null))" 2>&1 >> $GITHUB_OUTPUT
      - name: Run SonarCloud prepare script
        if: steps.check-sonarcloud-configured.outputs.sonar-ready == 'true' && steps.check-sonarcloud-configured.outputs.sonar-prepare == 'true'
        run: ${{ steps.pkg-manager.outputs.run-cmd }} ${{ inputs.sonarcloud-command }} ${{ inputs.sonarcloud-command-args }}
        env:
          NODE_OPTIONS: --max-old-space-size=${{ steps.calc-system-memory.outputs.available }}
      - name: Login to Docker Hub
        if: steps.check-sonarcloud-configured.outputs.sonar-ready == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: SonarCloud scan
        if: steps.check-sonarcloud-configured.outputs.sonar-ready == 'true'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
