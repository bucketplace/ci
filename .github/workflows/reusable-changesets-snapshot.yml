name: "Snapshot Packages"

on:
  workflow_call:
    inputs:
      app-path:
        description: "Specifies a base directory to run the task from"
        required: false
        default: '.'
        type: string
      nodejs-version:
        description: "Specifies which Node.js version to use"
        required: false
        default: '16'
        type: string
      package-manager:
        description: "Specifies which package manager to use"
        required: false
        default: ''
        type: string
      build-command:
        description: "Specifies a build command used on package finalizing before publish"
        required: false
        default: 'build'
        type: string
      snapshot-tag:
        description: "Specifies a tag name that is used for snapshot release"
        required: false
        default: 'snap'
        type: string
    secrets:
      GITHUB_TOKEN:
        description: "GitHub's default token for the current repository"
        required: true
      NEXUS_NPM_TOKEN:
        description: "A Nexus NPM token for publishing packages"
        required: true

env:
  NODE_ENV: production
  CI: true

jobs:
  snapshot:
    name: Run Changesets snapshot
    runs-on: [self-hosted, Linux, X64, cache, node-16]
    defaults:
      run:
        working-directory: ${{ inputs.app-path }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ inputs.nodejs-version }}
        run: echo ${{ inputs.nodejs-version }} > .nvmrc && nvm use
      - name: Configure registry
        run: |
          cat <<EOF > "$HOME/.npmrc"
            //nexus.co-workerhou.se/repository/npm-private/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NEXUS_NPM_TOKEN }}
      - name: Determine which package manager to use
        id: pkg-manager
        uses: bucketplace/ci/.github/actions/select-nodejs-pkg-manager@feature/SC-59
        with:
          package-manager: ${{ inputs.package-manager }}
      - name: Install dependencies
        run: ${{ env.PKG_CMD_INSTALL }}
      - name: Build packages
        run: ${{ env.PKG_CMD_RUN }} ${{ inputs.build-command }}
      - name: Change version for snapshot
        run: ${{ env.PKG_CMD_EXEC }} changeset version --snapshot ${{ inputs.snapshot-tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish snapshot
        run: ${{ env.PKG_CMD_EXEC }} changeset publish --tag ${{ inputs.snapshot-tag }} --snapshot --no-git-tag
