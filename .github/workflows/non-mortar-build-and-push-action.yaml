name: 🚀 Non Mortar Build And Push Action

on:
  workflow_call:
    inputs:
      application:
        required: true
        type: string
      profile:
        required: true
        type: string
      version:
        required: true
        type: string
      account-type:
        type: string
        required: true
      ecr-repository:
        type: string
        required: true
      dockerfile:
        type: string
        required: true
      working-directory:
        type: string
        required: true
      skip-update-version:
        type: boolean
        required: false
        default: false
    secrets:
      DEV_AWS_ACCESS_KEY_ID:
        required: true
      DEV_AWS_SECRET_ACCESS_KEY:
        required: true
      DEV_AWS_ACCOUNT_ID:
        required: true
      DATA_AWS_ACCESS_KEY_ID:
        required: true
      DATA_AWS_SECRET_ACCESS_KEY:
        required: true
      DATA_AWS_ACCOUNT_ID:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCOUNT_ID:
        required: true
      NEXUS_DEPLOY_USERPASS:
        required: true
      OPSMONSTER_AUTH_TOKEN_V2:
        required: true
      OPSMONSTER_BASE_URL_V2:
        required: true
    outputs:
      version:
        description: "The version of the application that was built and pushed"
        value: ${{ jobs.build-and-push.outputs.version }}

jobs:
  build-and-push:
    name: "Build: ${{ inputs.application }}"
    runs-on: [ self-hosted, Linux, X64, mortar, v2 ]
    env:
      DEBUG: true
      APP_PROFILE: ${{ inputs.profile }}
    outputs:
      version: ${{ inputs.version }}
    steps:
      - name: Resolve AWS environment
        id: aws
        run: |
          if [ "${{ inputs.account-type }}" == "DATA" ] 
          then
            echo "::add-mask::${{ secrets.DATA_AWS_ACCESS_KEY_ID }}"
            echo "access_key_id=${{ secrets.DATA_AWS_ACCESS_KEY_ID }}" >> "$GITHUB_OUTPUT"
            echo "::add-mask::${{ secrets.DATA_AWS_SECRET_ACCESS_KEY }}"
            echo "secret_access_key=${{ secrets.DATA_AWS_SECRET_ACCESS_KEY }}" >> "$GITHUB_OUTPUT"
            echo "::add-mask::${{ secrets.DATA_AWS_ACCOUNT_ID }}"
            echo "account_id=${{ secrets.DATA_AWS_ACCOUNT_ID }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ inputs.account-type }}" == "DEV" ] 
          then
            echo "::add-mask::${{ secrets.DEV_AWS_ACCESS_KEY_ID }}"
            echo "access_key_id=${{ secrets.DEV_AWS_ACCESS_KEY_ID }}" >> "$GITHUB_OUTPUT"
            echo "::add-mask::${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}"
            echo "secret_access_key=${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}" >> "$GITHUB_OUTPUT"
            echo "::add-mask::${{ secrets.DEV_AWS_ACCOUNT_ID }}"
            echo "account_id=${{ secrets.DEV_AWS_ACCOUNT_ID }}" >> "$GITHUB_OUTPUT"
          else
            echo "::add-mask::${{ secrets.AWS_ACCESS_KEY_ID }}"
            echo "access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> "$GITHUB_OUTPUT"
            echo "::add-mask::${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            echo "secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> "$GITHUB_OUTPUT"
            echo "::add-mask::${{ secrets.AWS_ACCOUNT_ID }}"
            echo "account_id=${{ secrets.AWS_ACCOUNT_ID }}" >> "$GITHUB_OUTPUT"
          fi
        shell: bash
      - name: Check out code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BP_DEPLOYER_GITHUB_TOKEN }}
      - name: Non Mortar Deploy
        uses: kciter/aws-ecr-action@master
        with:
          access_key_id: ${{ steps.aws.outputs.access_key_id }}
          secret_access_key: ${{ steps.aws.outputs.secret_access_key }}
          account_id: "${{ steps.aws.outputs.account_id }}"
          repo: ${{ inputs.ecr-repository }}
          region: ap-northeast-2
          tags: ${{ inputs.version }}
          create_repo: true
          path: ${{ inputs.working-directory }}
          dockerfile: ${{ inputs.dockerfile }}
          extra_build_args: "--target app --build-arg ACCESS_TOKEN=${{ secrets.BP_DEPLOYER_GITHUB_TOKEN }}"
      - name: Report Summary
        run: |
          cat > "$GITHUB_STEP_SUMMARY" << EOF
          ### Deployment Information
          배포가 실행되었습니다. :rocket:
          | Key | Value |
          | --- | --- |
          | Application | ${{ inputs.application }} |
          | Environment | ${{ env.APP_PROFILE }} |
          | Application Version | ${{ inputs.version }} |
          | Deployed By | @${{ github.actor }} |
          EOF
